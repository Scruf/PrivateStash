from django.test import TestCase
from django.contrib.auth.models import User
from django.test.client import Client
from .models import *
import datetime

# Create your tests here.

class ExceptionTest(TestCase):
    def test_registrationOutOfDate(self):
        admin=User.objects.create_superuser('admin','1800notAreal@email.com','p@ssWord')
        c=Client()
        loggedin=c.login(username=admin.username,password='p@ssWord')
        #date of birth should be in the past or today
        #dont let the user date of birth be in the future
        reg=Registration(admin,role='AD',date_of_birth=datetime.date(year=3111,month=2,day=2),phone_number='1111111111',mail_address='mail')
        status=''
        if reg.date_of_birth.year>datetime.datetime.now().year:
            status='birthday in range'
        else:
            status='birthday out of range'
        self.assertEquals(status,'birthday out of range')

    def test_ageIncorrect(self):  
        admin=User.objects.create_superuser('admin','1800notAreal@email.com','p@ssWord')
        c=Client()
        loggedin=c.login(username=admin.username,password='p@ssWord')
        #unreasonable date of birth
        #dont let me do this
        reg2=Registration(admin,role='AD',date_of_birth=datetime.date(year=1111,month=2,day=2),phone_number='1111111111',mail_address='mail')
        status=''
        timediff=datetime.datetime.now().year-reg2.date_of_birth.year
        self.assertIs(timediff>150,False)
